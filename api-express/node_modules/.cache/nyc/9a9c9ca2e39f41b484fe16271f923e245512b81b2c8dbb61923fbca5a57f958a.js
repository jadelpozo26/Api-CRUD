var cov_a12h8z2tq=function(){var path="C:\\Users\\jadel\\Desktop\\Api-CRUD\\api-express\\pruebassinbase.js";var hash="a053e4a3f63d3935df9d65aa99f04c93d8fed38d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\jadel\\Desktop\\Api-CRUD\\api-express\\pruebassinbase.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:16}},"1":{start:{line:2,column:14},end:{line:2,column:30}},"2":{start:{line:3,column:19},end:{line:3,column:34}},"3":{start:{line:4,column:76},end:{line:4,column:99}},"4":{start:{line:6,column:0},end:{line:136,column:2}},"5":{start:{line:7,column:20},end:{line:7,column:22}},"6":{start:{line:10,column:4},end:{line:35,column:6}},"7":{start:{line:11,column:24},end:{line:11,column:46}},"8":{start:{line:12,column:27},end:{line:12,column:41}},"9":{start:{line:13,column:25},end:{line:13,column:39}},"10":{start:{line:14,column:24},end:{line:14,column:38}},"11":{start:{line:15,column:25},end:{line:15,column:39}},"12":{start:{line:17,column:8},end:{line:19,column:10}},"13":{start:{line:20,column:8},end:{line:23,column:9}},"14":{start:{line:24,column:8},end:{line:25,column:122}},"15":{start:{line:28,column:8},end:{line:31,column:9}},"16":{start:{line:32,column:8},end:{line:32,column:39}},"17":{start:{line:33,column:8},end:{line:33,column:47}},"18":{start:{line:34,column:8},end:{line:34,column:51}},"19":{start:{line:39,column:4},end:{line:63,column:6}},"20":{start:{line:40,column:24},end:{line:40,column:46}},"21":{start:{line:41,column:27},end:{line:41,column:41}},"22":{start:{line:42,column:25},end:{line:42,column:39}},"23":{start:{line:43,column:24},end:{line:47,column:9}},"24":{start:{line:48,column:25},end:{line:48,column:39}},"25":{start:{line:50,column:25},end:{line:52,column:9}},"26":{start:{line:56,column:8},end:{line:59,column:9}},"27":{start:{line:60,column:8},end:{line:60,column:30}},"28":{start:{line:61,column:8},end:{line:61,column:47}},"29":{start:{line:62,column:8},end:{line:62,column:50}},"30":{start:{line:65,column:4},end:{line:86,column:6}},"31":{start:{line:66,column:24},end:{line:66,column:46}},"32":{start:{line:67,column:27},end:{line:67,column:41}},"33":{start:{line:68,column:25},end:{line:68,column:39}},"34":{start:{line:69,column:24},end:{line:73,column:9}},"35":{start:{line:74,column:25},end:{line:74,column:39}},"36":{start:{line:80,column:8},end:{line:83,column:9}},"37":{start:{line:84,column:8},end:{line:84,column:30}},"38":{start:{line:85,column:8},end:{line:85,column:47}},"39":{start:{line:89,column:4},end:{line:111,column:6}},"40":{start:{line:90,column:24},end:{line:90,column:46}},"41":{start:{line:91,column:27},end:{line:91,column:41}},"42":{start:{line:92,column:25},end:{line:92,column:39}},"43":{start:{line:93,column:25},end:{line:93,column:39}},"44":{start:{line:96,column:24},end:{line:100,column:13}},"45":{start:{line:103,column:8},end:{line:106,column:9}},"46":{start:{line:107,column:26},end:{line:107,column:61}},"47":{start:{line:108,column:8},end:{line:108,column:38}},"48":{start:{line:109,column:8},end:{line:109,column:47}},"49":{start:{line:110,column:8},end:{line:110,column:52}},"50":{start:{line:113,column:4},end:{line:135,column:6}},"51":{start:{line:114,column:24},end:{line:114,column:46}},"52":{start:{line:115,column:27},end:{line:115,column:41}},"53":{start:{line:116,column:25},end:{line:116,column:39}},"54":{start:{line:117,column:25},end:{line:117,column:39}},"55":{start:{line:120,column:24},end:{line:124,column:13}},"56":{start:{line:127,column:8},end:{line:130,column:9}},"57":{start:{line:131,column:22},end:{line:131,column:46}},"58":{start:{line:132,column:8},end:{line:132,column:38}},"59":{start:{line:133,column:8},end:{line:133,column:47}},"60":{start:{line:134,column:8},end:{line:134,column:52}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:33},end:{line:6,column:34}},loc:{start:{line:6,column:39},end:{line:136,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:28},end:{line:10,column:29}},loc:{start:{line:10,column:34},end:{line:35,column:5}},line:10},"2":{name:"(anonymous_2)",decl:{start:{line:39,column:33},end:{line:39,column:34}},loc:{start:{line:39,column:39},end:{line:63,column:5}},line:39},"3":{name:"(anonymous_3)",decl:{start:{line:65,column:33},end:{line:65,column:34}},loc:{start:{line:65,column:39},end:{line:86,column:5}},line:65},"4":{name:"(anonymous_4)",decl:{start:{line:89,column:26},end:{line:89,column:27}},loc:{start:{line:89,column:32},end:{line:111,column:5}},line:89},"5":{name:"(anonymous_5)",decl:{start:{line:113,column:39},end:{line:113,column:40}},loc:{start:{line:113,column:45},end:{line:135,column:5}},line:113}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"a053e4a3f63d3935df9d65aa99f04c93d8fed38d"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_a12h8z2tq.s[0]++;require('mocha');const sinon=(cov_a12h8z2tq.s[1]++,require('sinon'));const{expect}=(cov_a12h8z2tq.s[2]++,require('chai'));const{getAllFutbolistas,getFutbo,createfutbolista,updateid,deleteid}=(cov_a12h8z2tq.s[3]++,require('./funciones'));cov_a12h8z2tq.s[4]++;describe('Futbolistas Describe',()=>{cov_a12h8z2tq.f[0]++;let mockfutbo=(cov_a12h8z2tq.s[5]++,[]);//read all users
cov_a12h8z2tq.s[6]++;it('will get all users',()=>{cov_a12h8z2tq.f[1]++;const sandbox=(cov_a12h8z2tq.s[7]++,sinon.sandbox.create());const statusMock=(cov_a12h8z2tq.s[8]++,sandbox.stub());const jsonMock=(cov_a12h8z2tq.s[9]++,sandbox.stub());const reqMock=(cov_a12h8z2tq.s[10]++,sandbox.stub());const nextMock=(cov_a12h8z2tq.s[11]++,sandbox.stub());cov_a12h8z2tq.s[12]++;mockfutbo.push({id:1,nombre:'Lorenzo',apellido:'apellido',lugarnac:'italia',fechanac:'21-12-1999',equipo:'Napoli'});cov_a12h8z2tq.s[13]++;mockfutbo.push({id:2,nombre:'Juan',apellido:'apellido',lugarnac:'italia',fechanac:'21-12-1999',equipo:'Napoli'});cov_a12h8z2tq.s[14]++;mockfutbo.push({id:3,nombre:'Miguel',apellido:'apellido',lugarnac:'italia',fechanac:'21-12-1999',equipo:'Napoli'});const res=(cov_a12h8z2tq.s[15]++,{status:statusMock,send:jsonMock});cov_a12h8z2tq.s[16]++;getAllFutbolistas(reqMock,res);cov_a12h8z2tq.s[17]++;sinon.assert.calledWith(statusMock,200);cov_a12h8z2tq.s[18]++;sinon.assert.calledWith(jsonMock,mockfutbo);});//read un usuario
cov_a12h8z2tq.s[19]++;it('will get one futbolista',()=>{cov_a12h8z2tq.f[2]++;const sandbox=(cov_a12h8z2tq.s[20]++,sinon.sandbox.create());const statusMock=(cov_a12h8z2tq.s[21]++,sandbox.stub());const jsonMock=(cov_a12h8z2tq.s[22]++,sandbox.stub());const reqMock=(cov_a12h8z2tq.s[23]++,{params:{id:1}});const nextMock=(cov_a12h8z2tq.s[24]++,sandbox.stub());const response=(cov_a12h8z2tq.s[25]++,{id:1,nombre:'Lorenzo',apellido:'apellido',lugarnac:'italia',fechanac:'21-12-1999',equipo:'Napoli'});const res=(cov_a12h8z2tq.s[26]++,{status:statusMock,send:jsonMock});cov_a12h8z2tq.s[27]++;getFutbo(reqMock,res);cov_a12h8z2tq.s[28]++;sinon.assert.calledWith(statusMock,200);cov_a12h8z2tq.s[29]++;sinon.assert.calledWith(jsonMock,response);});cov_a12h8z2tq.s[30]++;it('will get one futbolista',()=>{cov_a12h8z2tq.f[3]++;const sandbox=(cov_a12h8z2tq.s[31]++,sinon.sandbox.create());const statusMock=(cov_a12h8z2tq.s[32]++,sandbox.stub());const jsonMock=(cov_a12h8z2tq.s[33]++,sandbox.stub());const reqMock=(cov_a12h8z2tq.s[34]++,{params:{id:4}});const nextMock=(cov_a12h8z2tq.s[35]++,sandbox.stub());const res=(cov_a12h8z2tq.s[36]++,{status:statusMock});cov_a12h8z2tq.s[37]++;getFutbo(reqMock,res);cov_a12h8z2tq.s[38]++;sinon.assert.calledWith(statusMock,404);});//create
cov_a12h8z2tq.s[39]++;it('will create user',()=>{cov_a12h8z2tq.f[4]++;const sandbox=(cov_a12h8z2tq.s[40]++,sinon.sandbox.create());const statusMock=(cov_a12h8z2tq.s[41]++,sandbox.stub());const jsonMock=(cov_a12h8z2tq.s[42]++,sandbox.stub());const nextMock=(cov_a12h8z2tq.s[43]++,sandbox.stub());const reqMock=(cov_a12h8z2tq.s[44]++,{body:{nombre:'Lorenzo',apellido:'apellido',lugarnac:'italia',fechanac:'21-12-2199',equipo:'Napoli'}});const res=(cov_a12h8z2tq.s[45]++,{status:statusMock,send:jsonMock});const respuesta=(cov_a12h8z2tq.s[46]++,"El Futbolista se agrego con exito");cov_a12h8z2tq.s[47]++;createfutbolista(reqMock,res);cov_a12h8z2tq.s[48]++;sinon.assert.calledWith(statusMock,201);cov_a12h8z2tq.s[49]++;sinon.assert.calledWith(jsonMock,respuesta);});cov_a12h8z2tq.s[50]++;it('will erro user nombre require',()=>{cov_a12h8z2tq.f[5]++;const sandbox=(cov_a12h8z2tq.s[51]++,sinon.sandbox.create());const statusMock=(cov_a12h8z2tq.s[52]++,sandbox.stub());const jsonMock=(cov_a12h8z2tq.s[53]++,sandbox.stub());const nextMock=(cov_a12h8z2tq.s[54]++,sandbox.stub());const reqMock=(cov_a12h8z2tq.s[55]++,{body:{apellido:'apellido',lugarnac:'italia',fechanac:'21-12-2199',equipo:'Napoli'}});const res=(cov_a12h8z2tq.s[56]++,{status:statusMock,send:jsonMock});const respuesta=(cov_a12h8z2tq.s[57]++,"\"nombre\" is requiere");cov_a12h8z2tq.s[58]++;createfutbolista(reqMock,res);cov_a12h8z2tq.s[59]++;sinon.assert.calledWith(statusMock,400);cov_a12h8z2tq.s[60]++;sinon.assert.calledWith(jsonMock,respuesta);});});